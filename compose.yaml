services:
  api:
    build: 
      context: ./api/
    container_name: todo-server-api
    environment:
      NODE_ENV: production
    env_file:
      - ".docker.env"
      - "db.docker.env"
    ports:
      - "8000:8000"
    networks:
      - my-network
    develop:
      watch:
        - action: rebuild
          path: ./api/src
          target: /usr/src/app/src
          ignore:
            - node_modules
  db:
    build: 
      context: ./db/
    container_name: todo-server-db
    restart: on-failure
    ports:
      - "3306:3306"
    env_file: "db.docker.env"
    volumes:
      - "./db/data:/var/lib/mysql"
      - "./db/sql:/docker-entrypoint-initdb.d"
    networks:
      - my-network
networks:
  my-network:

  # db:
  #   image: mysql:8.0
  #   container_name: todos-server-db
  #   restart: on-failure
  #   command: >
  #     bash -c "
  #     sudo chmod 644 /etc/mysql/conf.d/my.cnf
  #     && mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
  #   ports:
  #     - "3306:3306"
  #   env_file: "db.docker.env"
  #   volumes:
  #     - "./docker/db/data:/var/lib/mysql"
  #     - "./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf"
  #     - "./docker/db/sql:/docker-entrypoint-initdb.d"
  #   networks:
  #     - my-network
    # healthcheck:
    #   test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
    #   start_period: 10s
    #   interval: 5s
    #   timeout: 5s
    #   retries: 20
    